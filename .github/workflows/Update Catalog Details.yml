name: Update Catalog Details

# Controls when the workflow will run
on:
  # Allows you to run this workflow from another workflow
  workflow_call:
    inputs:
      referenceName:
        required: true
        type: string       
      runNumber:
        required: true
        type: string   
      referenceType:
        required: true
        type: string   
      repository:
        required: true
        type: string 
      owner:
        required: true
        type: string
    secrets:
      api-key:
        required: true

jobs:
  update_catalog_details:
      name: Update Catalog Details
      runs-on: windows-latest
      permissions:
        contents: write
      steps:
        - uses: actions/checkout@v4
                       
        - name: Install .NET Tools
          run: |
            dotnet tool install -g Skyline.DataMiner.CICD.Tools.CatalogUpload --prerelease
            dotnet tool install -g Skyline.DataMiner.CICD.Tools.GitHubToCatalogYaml --prerelease
        
        - name: Create or Extend Catalog.yml
          run: |
            github-to-catalog-yaml --workspace "${{ github.workspace }}" --github-token ${{ secrets.GITHUB_TOKEN }} --github-repository "${{ github.repository }}" --catalog-identifier "${{ vars.catalogIdentifier }}"
       
        - name: Check if catalog.yml or manifest.yml exists
          id: check_files
          shell: pwsh
          run: |
            if (Test-Path "${{ github.workspace }}/catalog.yml") {
              echo "catalogDetails=catalog.yml" >> $env:GITHUB_ENV
            }
            elseif (Test-Path "${{ github.workspace }}/manifest.yml") {
              echo "catalogDetails=manifest.yml" >> $env:GITHUB_ENV
            }
            else {
              Write-Host "No valid file found!"
              exit 1
            }
        
        - uses: actions/upload-artifact@v4
          if: env.catalogDetails != ''
          with:
            name: Catalog Details
            path: "${{ github.workspace }}/${{ env.catalogDetails }}"

        - name: Commit .githubtocatalog\auto-generated-catalog
          run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add "${{ github.workspace }}\.githubtocatalog\auto-generated-catalog.yml"
            
            # Check if there are any changes to be committed
            git diff --staged --quiet
            if ($LASTEXITCODE -ne 0) {
              git commit -m "auto-generated"
            }
            else {
              Write-Host "No changes to commit."
            }
          
        - name: Push .githubtocatalog\auto-generated-catalog
          run: |
            git push
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Retrieve README.md
          id: find_readme
          shell: pwsh
          run: |
            $readmePath = Get-ChildItem -Recurse -Filter "README.md" | Select-Object -First 1
            if (-not $readmePath) {
            echo "::set-output name=readmePath::" # No readme found  
            }
            echo "::set-output name=readmePath::$readmePath"
  
        - name: Retrieve Images folder
          id: find_images
          shell: pwsh
          run: |
            $readmeDir = Split-Path "${{ steps.find_readme.outputs.readmePath }}"
            
            # Get all directories in the same path as README.md, case-insensitive match for "Images"
            $imagesDir = Get-ChildItem -Path $readmeDir -Directory | Where-Object { $_.Name -imatch '^Images$' }
            
            # If Images folder is not found in the same directory, check the parent directory
            if (-not $imagesDir) {
              $parentDir = Split-Path $readmeDir -Parent
              
              # Skip if the current directory is already the workspace directory
              if ($readmeDir -ne "${{ github.workspace }}") {
                # Check for Images folder in the parent directory (unless it's the workspace)
                $imagesDir = Get-ChildItem -Path $parentDir -Directory | Where-Object { $_.Name -imatch '^Images$' }
              }
            }
    
            if ($imagesDir) {
              echo "::set-output name=imagesPath::$($imagesDir.FullName)"
            } else {
              echo "::set-output name=imagesPath::"  # No Images folder found
            }
      
    
        - name: Upload to Catalog
          id: uploadToCatalog
          shell: pwsh
          run: |
            dataminer-catalog-upload update-catalog-details `
              --path-to-catalog-yml "${{ github.workspace }}\${{ env.catalogDetails }}" `
              --path-to-readme "${{ steps.find_readme.outputs.readmePath }}" `
              --path-to-images "${{ steps.find_images.outputs.imagesPath }}"
              --dm-catalog-token "${{ secrets.api-key }}"
  